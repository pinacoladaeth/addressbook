const namehash = require('eth-ens-namehash')
const server = require('./server')
const Web3 = require('web3')

let web3
let ens
let resolver
let registrar

const deploy = {
    registry: async () => {
        const ensContract = new web3.eth.Contract([{
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "resolver",
            "outputs": [{"name": "", "type": "address"}],
            "payable": false,
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "owner",
            "outputs": [{"name": "", "type": "address"}],
            "payable": false,
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "label", "type": "bytes32"}, {
                "name": "owner",
                "type": "address"
            }],
            "name": "setSubnodeOwner",
            "outputs": [],
            "payable": false,
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "ttl", "type": "uint64"}],
            "name": "setTTL",
            "outputs": [],
            "payable": false,
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "ttl",
            "outputs": [{"name": "", "type": "uint64"}],
            "payable": false,
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "resolver", "type": "address"}],
            "name": "setResolver",
            "outputs": [],
            "payable": false,
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "owner", "type": "address"}],
            "name": "setOwner",
            "outputs": [],
            "payable": false,
            "type": "function"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "owner",
                "type": "address"
            }],
            "name": "Transfer",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": true,
                "name": "label",
                "type": "bytes32"
            }, {"indexed": false, "name": "owner", "type": "address"}],
            "name": "NewOwner",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "resolver",
                "type": "address"
            }],
            "name": "NewResolver",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "ttl",
                "type": "uint64"
            }],
            "name": "NewTTL",
            "type": "event"
        }])
        const ensTx = ensContract.deploy({
            data: "0x33600060000155610220806100146000396000f3630178b8bf60e060020a600035041415610023576020600435015460405260206040f35b6302571be360e060020a600035041415610047576000600435015460405260206040f35b6316a25cbd60e060020a60003504141561006b576040600435015460405260206040f35b635b0fc9c360e060020a6000350414156100b8576000600435015433141515610092576002565b6024356000600435015560243560405260043560198061020760003960002060206040a2005b6306ab592360e060020a6000350414156101165760006004350154331415156100df576002565b6044356000600435600052602435602052604060002001556044356040526024356004356021806101e660003960002060206040a3005b631896f70a60e060020a60003504141561016357600060043501543314151561013d576002565b60243560206004350155602435604052600435601c806101ca60003960002060206040a2005b6314ab903860e060020a6000350414156101b057600060043501543314151561018a576002565b602435604060043501556024356040526004356016806101b460003960002060206040a2005b6002564e657754544c28627974657333322c75696e743634294e65775265736f6c76657228627974657333322c61646472657373294e65774f776e657228627974657333322c627974657333322c61646472657373295472616e7366657228627974657333322c6164647265737329",
        })
        const estimateGas = await ensTx.estimateGas()
        const ens = await ensTx.send({
            from: web3.eth.accounts.wallet[0].address,
            gas: estimateGas
        })

        return ens
    },
    registrar: async (ensAddress) => {
        const registrarContract = new web3.eth.Contract([{
            "constant": false,
            "inputs": [{"name": "subnode", "type": "bytes32"}, {"name": "owner", "type": "address"}],
            "name": "register",
            "outputs": [],
            "payable": false,
            "type": "function"
        }, {
            "inputs": [{"name": "ensAddr", "type": "address"}, {"name": "node", "type": "bytes32"}, {
                "name": "_startDate",
                "type": "uint256"
            }], "type": "constructor"
        }]);
        const registrarTx = registrarContract.deploy({
            data: "0x60606040818152806101c4833960a0905251608051600080546c0100000000000000000000000080850204600160a060020a0319909116179055600181905550506101768061004e6000396000f3606060405260e060020a6000350463d22057a9811461001e575b610002565b34610002576100f4600435602435600154604080519182526020808301859052815192839003820183206000805494830181905283517f02571be3000000000000000000000000000000000000000000000000000000008152600481018390529351879592949193600160a060020a03909316926302571be3926024808201939182900301818787803b156100025760325a03f11561000257505060405151915050600160a060020a038116158015906100ea575033600160a060020a031681600160a060020a031614155b156100f657610002565b005b60008054600154604080517f06ab5923000000000000000000000000000000000000000000000000000000008152600481019290925260248201899052600160a060020a03888116604484015290519216926306ab59239260648084019382900301818387803b156100025760325a03f11561000257505050505050505056",
            arguments: [ensAddress, web3.utils.toHex(0), 0]
        })
        const estimateGas = await registrarTx.estimateGas()
        const registrar = await registrarTx.send({
            from: web3.eth.accounts.wallet[0].address,
            gas: estimateGas
        })

        return registrar
    },
    resolver: async (ensAddress) => {
        const publicResolverContract = new web3.eth.Contract([{
            "constant": true,
            "inputs": [{"name": "interfaceID", "type": "bytes4"}],
            "name": "supportsInterface",
            "outputs": [{"name": "", "type": "bool"}],
            "payable": false,
            "stateMutability": "pure",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "key", "type": "string"}, {
                "name": "value",
                "type": "string"
            }],
            "name": "setText",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "contentTypes", "type": "uint256"}],
            "name": "ABI",
            "outputs": [{"name": "contentType", "type": "uint256"}, {"name": "data", "type": "bytes"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "x", "type": "bytes32"}, {
                "name": "y",
                "type": "bytes32"
            }],
            "name": "setPubkey",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "content",
            "outputs": [{"name": "", "type": "bytes32"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "addr",
            "outputs": [{"name": "", "type": "address"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "key", "type": "string"}],
            "name": "text",
            "outputs": [{"name": "", "type": "string"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "contentType", "type": "uint256"}, {
                "name": "data",
                "type": "bytes"
            }],
            "name": "setABI",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "name",
            "outputs": [{"name": "", "type": "string"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "name", "type": "string"}],
            "name": "setName",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "hash", "type": "bytes"}],
            "name": "setMultihash",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "hash", "type": "bytes32"}],
            "name": "setContent",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "pubkey",
            "outputs": [{"name": "x", "type": "bytes32"}, {"name": "y", "type": "bytes32"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "constant": false,
            "inputs": [{"name": "node", "type": "bytes32"}, {"name": "addr", "type": "address"}],
            "name": "setAddr",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }, {
            "constant": true,
            "inputs": [{"name": "node", "type": "bytes32"}],
            "name": "multihash",
            "outputs": [{"name": "", "type": "bytes"}],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        }, {
            "inputs": [{"name": "ensAddr", "type": "address"}],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "a",
                "type": "address"
            }],
            "name": "AddrChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "hash",
                "type": "bytes32"
            }],
            "name": "ContentChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "name",
                "type": "string"
            }],
            "name": "NameChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": true,
                "name": "contentType",
                "type": "uint256"
            }],
            "name": "ABIChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "x",
                "type": "bytes32"
            }, {"indexed": false, "name": "y", "type": "bytes32"}],
            "name": "PubkeyChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "indexedKey",
                "type": "string"
            }, {"indexed": false, "name": "key", "type": "string"}],
            "name": "TextChanged",
            "type": "event"
        }, {
            "anonymous": false,
            "inputs": [{"indexed": true, "name": "node", "type": "bytes32"}, {
                "indexed": false,
                "name": "hash",
                "type": "bytes"
            }],
            "name": "MultihashChanged",
            "type": "event"
        }])

        const publicResolverTx = publicResolverContract.deploy({
            data: '0x608060405234801561001057600080fd5b50604051602080611f8083398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050611efd806100836000396000f3006080604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301ffc9a7146100e057806310f13a8c146101445780632203ab561461020157806329cd62ea146102bc5780632dff6941146103095780633b3b57de1461035657806359d1d43c146103c7578063623195b0146104b7578063691f34311461053857806377372213146105e2578063aa4cb54714610659578063c3d014d6146106d0578063c86902331461070f578063d5fa2b001461076b578063e89401a1146107bc575b600080fd5b3480156100ec57600080fd5b5061012a60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610866565b604051808215151515815260200191505060405180910390f35b34801561015057600080fd5b506101ff6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610bc0565b005b34801561020d57600080fd5b5061023a600480360381019080803560001916906020019092919080359060200190929190505050610e7d565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610280578082015181840152602081019050610265565b50505050905090810190601f1680156102ad5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156102c857600080fd5b50610307600480360381019080803560001916906020019092919080356000191690602001909291908035600019169060200190929190505050610fc0565b005b34801561031557600080fd5b506103386004803603810190808035600019169060200190929190505050611185565b60405180826000191660001916815260200191505060405180910390f35b34801561036257600080fd5b5061038560048036038101908080356000191690602001909291905050506111ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103d357600080fd5b5061043c6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506111f5565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561047c578082015181840152602081019050610461565b50505050905090810190601f1680156104a95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104c357600080fd5b50610536600480360381019080803560001916906020019092919080359060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061131f565b005b34801561054457600080fd5b5061056760048036038101908080356000191690602001909291905050506114bc565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105a757808201518184015260208101905061058c565b50505050905090810190601f1680156105d45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156105ee57600080fd5b506106576004803603810190808035600019169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061157c565b005b34801561066557600080fd5b506106ce6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611762565b005b3480156106dc57600080fd5b5061070d60048036038101908080356000191690602001909291908035600019169060200190929190505050611948565b005b34801561071b57600080fd5b5061073e6004803603810190808035600019169060200190929190505050611ac5565b60405180836000191660001916815260200182600019166000191681526020019250505060405180910390f35b34801561077757600080fd5b506107ba6004803603810190808035600019169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b15565b005b3480156107c857600080fd5b506107eb6004803603810190808035600019169060200190929190505050611cec565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561082b578082015181840152602081019050610810565b50505050905090810190601f1680156108585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6000633b3b57de7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610937575063d8389dc57c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806109a2575063691f34317c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a0d5750632203ab567c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a78575063c86902337c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610ae357506359d1d43c7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610b4e575063e89401a17c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610bb957506301ffc9a77c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b823373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015610c7057600080fd5b505af1158015610c84573d6000803e3d6000fd5b505050506040513d6020811015610c9a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515610ccd57600080fd5b81600160008660001916600019168152602001908152602001600020600501846040518082805190602001908083835b602083101515610d225780518252602082019150602081019050602083039250610cfd565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390209080519060200190610d68929190611dac565b5083600019167fd8c9334b1a9c2f9da342a0a2b32629c1a229b6445dad78947f674b44444a75508485604051808060200180602001838103835285818151815260200191508051906020019080838360005b83811015610dd5578082015181840152602081019050610dba565b50505050905090810190601f168015610e025780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610e3b578082015181840152602081019050610e20565b50505050905090810190601f168015610e685780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a250505050565b6000606060006001600086600019166000191681526020019081526020016000209050600192505b8383111515610fb357600084841614158015610eea57506000816006016000858152602001908152602001600020805460018160011615610100020316600290049050115b15610fa4578060060160008481526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f985780601f10610f6d57610100808354040283529160200191610f98565b820191906000526020600020905b815481529060010190602001808311610f7b57829003601f168201915b50505050509150610fb8565b6001839060020a029250610ea5565b600092505b509250929050565b823373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b505050506040513d602081101561109a57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161415156110cd57600080fd5b6040805190810160405280846000191681526020018360001916815250600160008660001916600019168152602001908152602001600020600301600082015181600001906000191690556020820151816001019060001916905590505083600019167f1d6f5e03d3f63eb58751986629a5439baee5079ff04f345becb66e23eb154e46848460405180836000191660001916815260200182600019166000191681526020019250505060405180910390a250505050565b6000600160008360001916600019168152602001908152602001600020600101549050919050565b600060016000836000191660001916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6060600160008460001916600019168152602001908152602001600020600501826040518082805190602001908083835b60208310151561124b5780518252602082019150602081019050602083039250611226565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113125780601f106112e757610100808354040283529160200191611312565b820191906000526020600020905b8154815290600101906020018083116112f557829003601f168201915b5050505050905092915050565b823373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505050506040513d60208110156113f957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561142c57600080fd5b600083600185031614151561144057600080fd5b8160016000866000191660001916815260200190815260200160002060060160008581526020019081526020016000209080519060200190611483929190611e2c565b508284600019167faa121bbeef5f32f5961a2a28966e769023910fc9479059ee3495d4c1a696efe360405160405180910390a350505050565b60606001600083600019166000191681526020019081526020016000206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115705780601f1061154557610100808354040283529160200191611570565b820191906000526020600020905b81548152906001019060200180831161155357829003601f168201915b50505050509050919050565b813373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561162c57600080fd5b505af1158015611640573d6000803e3d6000fd5b505050506040513d602081101561165657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561168957600080fd5b8160016000856000191660001916815260200190815260200160002060020190805190602001906116bb929190611dac565b5082600019167fb7d29e911041e8d9b843369e890bcb72c9388692ba48b65ac54e7214c4c348f7836040518080602001828103825283818151815260200191508051906020019080838360005b83811015611723578082015181840152602081019050611708565b50505050905090810190601f1680156117505780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b813373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b15801561181257600080fd5b505af1158015611826573d6000803e3d6000fd5b505050506040513d602081101561183c57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614151561186f57600080fd5b8160016000856000191660001916815260200190815260200160002060070190805190602001906118a1929190611e2c565b5082600019167fc0b0fc07269fc2749adada3221c095a1d2187b2d075b51c915857b520f3a5021836040518080602001828103825283818151815260200191508051906020019080838360005b838110156119095780820151818401526020810190506118ee565b50505050905090810190601f1680156119365780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505050565b813373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b1580156119f857600080fd5b505af1158015611a0c573d6000803e3d6000fd5b505050506040513d6020811015611a2257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515611a5557600080fd5b81600160008560001916600019168152602001908152602001600020600101816000191690555082600019167f0424b6fe0d9c3bdbece0e7879dc241bb0c22e900be8b6c168b4ee08bd9bf83bc8360405180826000191660001916815260200191505060405180910390a2505050565b600080600160008460001916600019168152602001908152602001600020600301600001546001600085600019166000191681526020019081526020016000206003016001015491509150915091565b813373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166302571be3836040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808260001916600019168152602001915050602060405180830381600087803b158015611bc557600080fd5b505af1158015611bd9573d6000803e3d6000fd5b505050506040513d6020811015611bef57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16141515611c2257600080fd5b8160016000856000191660001916815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600019167f52d7d861f09ab3d26239d492e8968629f95e9e318cf0b73bfddc441522a15fd283604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a2505050565b60606001600083600019166000191681526020019081526020016000206007018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611da05780601f10611d7557610100808354040283529160200191611da0565b820191906000526020600020905b815481529060010190602001808311611d8357829003601f168201915b50505050509050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611ded57805160ff1916838001178555611e1b565b82800160010185558215611e1b579182015b82811115611e1a578251825591602001919060010190611dff565b5b509050611e289190611eac565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611e6d57805160ff1916838001178555611e9b565b82800160010185558215611e9b579182015b82811115611e9a578251825591602001919060010190611e7f565b5b509050611ea89190611eac565b5090565b611ece91905b80821115611eca576000816000905550600101611eb2565b5090565b905600a165627a7a723058204b9fad9a7b2eb11ebb8915ae3516f2fafd9dad60e644f45bbc99bc74babb934a0029',
            arguments: [ensAddress]
        })

        const estimateGas = await publicResolverTx.estimateGas()
        const publicResolver = await publicResolverTx.send({
            from: web3.eth.accounts.wallet[0].address,
            gas: estimateGas
        })

        return publicResolver
    }
}

const setResolver = async (name) => {
    await ens.methods.setResolver(namehash.hash(name), resolver.options.address).send({
        from: web3.eth.accounts.wallet[0].address,
        gas: 4700000
    })
    await resolver.methods.setAddr(namehash.hash(name), web3.eth.accounts.wallet[0].address).send({
        from: web3.eth.accounts.wallet[0].address,
        gas: 4700000
    })
}

const setSubdomain = async (top, sub) => {
    await ens.methods.setSubnodeOwner(namehash.hash(top), web3.utils.sha3(sub), web3.eth.accounts.wallet[0].address).send({
        from: web3.eth.accounts.wallet[0].address,
        gas: 4700000
    })
    await setResolver(`${sub}.${top}`)
}

const startServer = () => {
    server.listen()
    console.log(server.address)
    web3 = new Web3(server.address)
    web3.eth.accounts.wallet.add(server.privateKey)
}

const start = async () => {
    startServer()
    ens = await deploy.registry()
    registrar = await deploy.registrar(ens.options.address)
    resolver = await deploy.resolver(ens.options.address)
    await ens.methods.setOwner(web3.utils.toHex(0), registrar.options.address).send({
        from: web3.eth.accounts.wallet[0].address,
        gas: 4700000
    })
    await registrar.methods.register(web3.utils.sha3('eth'), web3.eth.accounts.wallet[0].address).send({
        from: web3.eth.accounts.wallet[0].address,
        gas: 4700000
    })
    await setResolver('eth')
    return {
        ens: ens.options.address,
        registrar: registrar.options.address,
        resolver: resolver.options.address,
    }
}

module.exports = {
    start: start,
    registerSubdomain: setSubdomain,
    close: server.close
}
